* (TEST 17) batt_update() error : ok
** COMMENTS


** PROGRAM: ./test_batt_update "batt_update() error"
To run this individual test in GDB use the command:
  gdb --args ./test_batt_update "batt_update() error"
but any input to the program must be typed within the debugger

** FAILURE MESSAGES
None

** SIDE-BY-SIDE DIFF of Expected vs Actual
. lines match; | lines differ; < expected line missing; > extra line in actual

#+BEGIN_SRC sdiff
===EXPECT===                                                           ===ACTUAL===
{                                                                    . {
    // call batt_update() with negative voltage reading which should .     // call batt_update() with negative voltage reading which should
    // bail out without changing anything.                           .     // bail out without changing anything.
    BATT_VOLTAGE_PORT = -6421;  // Negative value causes error out   .     BATT_VOLTAGE_PORT = -6421;  // Negative value causes error out
    BATT_STATUS_PORT  = 0b111011; // Percent mode                    .     BATT_STATUS_PORT  = 0b111011; // Percent mode
    BATT_DISPLAY_PORT = -1;                                          .     BATT_DISPLAY_PORT = -1;
    int ret = batt_update();                                         .     int ret = batt_update();
    printf("ret: %d\n",ret);                                         .     printf("ret: %d\n",ret);
    printf("\n");  print_ports();  printf("\n");                     .     printf("\n");  print_ports();  printf("\n");
    printf("Display based on BATT_DISPLAY_PORT:\n");                 .     printf("Display based on BATT_DISPLAY_PORT:\n");
    print_batt_display();                                            .     print_batt_display();
}                                                                    . }
---OUTPUT---                                                         . ---OUTPUT---
ret: 1                                                               . ret: 1
                                                                     . 
BATT_VOLTAGE_PORT  : -6421                                           . BATT_VOLTAGE_PORT  : -6421
BATT_STATUS_PORT   : 001 11011                                       . BATT_STATUS_PORT   : 001 11011
BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111           . BATT_DISPLAY_PORT  : 111 11111 1111111 1111111 1111111 111
index              :  29    24      17      10       3   0           . index              :  29    24      17      10       3   0
                                                                     . 
Display based on BATT_DISPLAY_PORT:                                  . Display based on BATT_DISPLAY_PORT:
+-^^^-+  ####   ####  ####                                           . +-^^^-+  ####   ####  ####     
|#####|  #  #   #  #  #  #                                           . |#####|  #  #   #  #  #  #     
|#####|  #  #   #  #  #  #                                           . |#####|  #  #   #  #  #  #     
|#####|  ####   ####  ####  V                                        . |#####|  ####   ####  ####  V  
|#####|  #  #   #  #  #  #  %                                        . |#####|  #  #   #  #  #  #  %  
|#####|  #  #   #  #  #  #                                           . |#####|  #  #   #  #  #  #     
+-----+  #### o ####  ####                                           . +-----+  #### o ####  ####     

#+END_SRC

** LINE-BY-LINE DIFF of Expected vs Actual
No differences found

** VALGRIND REPORT
The program is run on under valgrind as
  stdbuf -i 0 -o 0 -e 0 valgrind --error-exitcode=13 --leak-check=full --show-leak-kinds=all --track-origins=yes ./test_batt_update batt_update() error
which may be pasted onto a command line to run it.

#+BEGIN_SRC text
==48130== Memcheck, a memory error detector
==48130== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==48130== Using Valgrind-3.24.0 and LibVEX; rerun with -h for copyright info
==48130== Command: ./test_batt_update batt_update()\ error
==48130== 
==48130== 
==48130== HEAP SUMMARY:
==48130==     in use at exit: 0 bytes in 0 blocks
==48130==   total heap usage: 1 allocs, 1 frees, 4 bytes allocated
==48130== 
==48130== All heap blocks were freed -- no leaks are possible
==48130== 
==48130== For lists of detected and suppressed errors, rerun with: -s
==48130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
#+END_SRC

** SUMMARY
Test Passed
